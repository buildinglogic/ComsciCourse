{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\margl1440\margr1440\vieww17680\viewh15540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Superqueen_puzzle\
\
Documents: \
supperqueens_puzzle.cpp\
Makefile\
\
Compile:\
just type \'93make\'94 with my \'93Makefile\'94\
\
\
\
********************Running results **********************\
It will end with Segmentaiton fault with 7=<N <=9, \
It returns path with cost = 0 from   10 =< N <=18\
but, it does not work for N >=19, which also returns segmentation fault. \
\
***************************************************************\
For the failed cases, If we print out the the status during the process, like N = 7. The algorithm finds lowest cost = 4, as below:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \CocoaLigature0  0 0 0 0 0 1 0 \
 0 1 0 0 0 0 0 \
 0 0 1 0 0 0 0 \
 0 0 0 0 0 0 1 \
 0 0 0 0 0 0 1 \
 0 0 0 1 0 0 0 \
 1 0 0 0 0 0 0 \
\
but, somehow, it failed to printout correctly. 
\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
*****************successful testcase results****************************\
\
testcase: N =4\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \CocoaLigature0 Search till the end of Queue: \
Filling order (row, column): (0, 3) (1, 0) (2, 0) (3, 3) \
cost = 2\
 0 0 0 1 \
 1 0 0 0 \
 1 0 0 0 \
 0 0 0 1 \
\
testcase: N =6\
Search till the end of Queue: \
Filling order (row, column): (0, 2) (1, 5) (2, 5) (3, 1) (4, 0) (5, 4) \
cost = 2\
 0 0 1 0 0 0 \
 0 0 0 0 0 1 \
 0 0 0 0 0 1 \
 0 1 0 0 0 0 \
 1 0 0 0 0 0 \
 0 0 0 0 1 0 \

\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
testcase: N = 10\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \CocoaLigature0 find the first path with cost=0: \
Filling order (row, column): (0, 7) (1, 4) (2, 1) (3, 9) (4, 6) (5, 3) (6, 0) (7, 8) (8, 5) (9, 2) \
 0 0 0 0 0 0 0 1 0 0 \
 0 0 0 0 1 0 0 0 0 0 \
 0 1 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 1 \
 0 0 0 0 0 0 1 0 0 0 \
 0 0 0 1 0 0 0 0 0 0 \
 1 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 1 0 \
 0 0 0 0 0 1 0 0 0 0 \
 0 0 1 0 0 0 0 0 0 0 \
\
\
testcase N =15\
find the first path with cost=0: \
Filling order (row, column): (0, 1) (1, 12) (2, 8) (3, 3) (4, 14) (5, 10) (6, 5) (7, 2) (8, 11) (9, 7) (10, 4) (11, 13) (12, 0) (13, 9) (14, 6) \
 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 \
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 \
 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 \
 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 \
 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 \
 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 \
 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 \
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 \
 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 \
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \
\
testcase N =19\
find the first path with cost=0: \
Filling order (row, column): (0, 18) (1, 15) (2, 12) (3, 8) (4, 17) (5, 4) (6, 1) (7, 13) (8, 9) (9, 6) (10, 3) (11, 14) (12, 0) (13, 11) (14, 16) (15, 7) (16, 10) (17, 2) (18, 5) \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 \
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 \
 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 \
 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \
 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \
 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \
}